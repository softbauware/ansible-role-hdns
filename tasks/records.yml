---
- name: "print zone name"
  debug:
    msg: "{{ zone.name }}"

- name: "get zone information"
  uri:
    url: "{{ api_endpoint }}/zones"
    method: "GET"
    return_content: true
    headers:
      Auth-API-Token: "{{ api_token }}"
  register: "temp_zone_list_for_zone_id"

- name: "get zone id"
  set_fact:
    zone_id: "{{ item.id }}"
  loop: "{{ temp_zone_list_for_zone_id.json.zones }}"
  when: "item.name == zone.name"

- name: "get all records of current zone"
  uri:
    url: "{{ api_endpoint }}/records?zone_id={{ zone_id }}"
    method: "GET"
    return_content: true
    headers:
      Auth-API-Token: "{{ api_token }}"
  register: "json_record_list"

- name: "reset local record list"
  set_fact:
    record_list: []

- name: "add records to local record list"
  set_fact:
    record_list: "{{ record_list + [ item.type + item.name + item.value ] }}"
  loop: "{{ json_record_list.json.records }}"

- name: "create records missing on server"
  uri:
    url: "{{ api_endpoint }}/records"
    method: "POST"
    return_content: true
    body_format: "json"
    headers:
      Auth-API-Token: "{{ api_token }}"
    body: '{ "zone_id": "{{ zone_id }}", "type": "{{ item.type }}", "name": "{{ item.name }}", "value": "{{ item.value }}", "ttl": {{ item.ttl | default(ttl) }} }'
  when: "item.type + item.name + item.value not in record_list"
  loop: "{{ zone.records }}"
  changed_when: true

- name: "reset local record list"
  set_fact:
    record_list: []

- name: "add records to local record list"
  set_fact:
    record_list: "{{ record_list + [ item.type + item.name + item.value ] }}"
  loop: "{{ zone.records }}"

- name: "remove records from server which are not defined in records"
  uri:
    url: "{{ api_endpoint }}/records/{{ item.id }}"
    method: "DELETE"
    return_content: true
    headers:
      Auth-API-Token: "{{ api_token }}"
  when: 'remove_undefined and item.type + item.name + item.value not in record_list and item.type != "SOA"'
  loop: "{{ json_record_list.json.records }}"
  changed_when: true
