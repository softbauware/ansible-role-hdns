---
# tasks file for hdns

- name: "Get a list of all zones"
  ansible.builtin.uri:
    url: "{{ api_endpoint }}/zones"
    method: "GET"
    return_content: true
    headers:
      Auth-API-Token: "{{ api_token }}"
  register: "json_zone_list"

- name: "Reset local zone list"
  ansible.builtin.set_fact:
    zone_list: []

- name: "Add zones to local zone list"
  ansible.builtin.set_fact:
    zone_list: "{{ zone_list + [ item.name ] }}"
  loop: "{{ json_zone_list.json.zones }}"

- name: "Create zones missing on server"
  ansible.builtin.uri:
    url: "{{ api_endpoint }}/zones"
    method: "POST"
    return_content: true
    body_format: "json"
    headers:
      Auth-API-Token: "{{ api_token }}"
    body: '{ "name": "{{ item.name }}", "ttl": {{ item.ttl | default(ttl) }} }'
  when: "item.name not in zone_list"
  loop: "{{ zones }}"
  changed_when: true

- name: "Reset local zone list"
  ansible.builtin.set_fact:
    zone_list: []

- name: "Add zones to local zone list"
  ansible.builtin.set_fact:
    zone_list: "{{ zone_list + [ item.name ] }}"
  loop: "{{ zones }}"

- name: "Remove zones from server which are not defined in vars"
  ansible.builtin.uri:
    url: "{{ api_endpoint }}/zones/{{ item.id }}"
    method: "DELETE"
    return_content: true
    headers:
      Auth-API-Token: "{{ api_token }}"
  when: "remove_missing_zones and item.name not in zone_list"
  loop: "{{ json_zone_list.json.zones }}"
  changed_when: true

- name: "Update zone records"
  ansible.builtin.include_tasks: records.yml
  loop: "{{ zones }}"
  loop_control:
    loop_var: zone
